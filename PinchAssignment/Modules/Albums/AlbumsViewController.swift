//
//  AlbumsViewController.swift
//  PinchAssignment
//
//  Created by Andrija Scepanovic on 9/29/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift
import RxCocoa

final class AlbumsViewController: UIViewController {

    // MARK: - IB Outlets -

    @IBOutlet weak var tableView: UITableView! {
        didSet {
            tableView.registerNib(cellOfType: TitleTableViewCell.self)
            tableView.tableFooterView = UIView()
        }
    }

    // MARK: - Public properties -

    var presenter: AlbumsPresenterInterface!

    lazy var refreshControl: UIRefreshControl = {
        let refreshControl = UIRefreshControl()
        tableView.refreshControl = refreshControl
        return refreshControl
    }()

    // MARK: - Private properties -

    private lazy var tableDataSourceDelegate: TableDataSourceDelegate = {
        TableDataSourceDelegate(tableView: tableView)
    }()

    private let disposeBag = DisposeBag()

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }

}

// MARK: - Extensions -

extension AlbumsViewController: AlbumsViewInterface {
}

private extension AlbumsViewController {

    func setupView() {
        let pullToRefresh = refreshControl.rx.controlEvent(.valueChanged).asSignal().mapToVoid()
        let output = Albums.ViewOutput(pullToRefresh: pullToRefresh)

        let input = presenter.configure(with: output)

        input.items
            .drive(tableDataSourceDelegate.rx.items)
            .disposed(by: disposeBag)
    }

}
